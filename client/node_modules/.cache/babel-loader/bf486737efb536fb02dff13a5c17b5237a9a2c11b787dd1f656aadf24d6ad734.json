{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wwwsu\\\\Desktop\\\\FileSharing\\\\client\\\\src\\\\context\\\\authcontext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// import { createContext, useState, useEffect } from \"react\";\n\n// export const AuthContext = createContext();\n\n// export const AuthProvider = ({ children }) => {\n//     const [user, setUser] = useState(null);\n\n//     useEffect(() => {\n//         const token = localStorage.getItem(\"token\");\n//         if (token) setUser({ token });\n//     }, []);\n\n//     const login = (token) => {\n//         localStorage.setItem(\"token\", token);\n//         setUser({ token });\n//     };\n\n//     const logout = () => {\n//         localStorage.removeItem(\"token\");\n//         setUser(null);\n//     };\n\n//     return (\n//         <AuthContext.Provider value={{ user, login, logout }}>\n//             {children}\n//         </AuthContext.Provider>\n//     );\n// };\n\n//------------------------------------\n\nimport { createContext, useContext, useState, useEffect } from \"react\";\n\n// Create AuthContext\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\n\n// Custom Hook to use AuthContext\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n\n// AuthProvider Component\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n\n  // Load user from localStorage if exists\n  useEffect(() => {\n    const storedUser = localStorage.getItem(\"user\");\n    if (storedUser) {\n      setUser(JSON.parse(storedUser));\n    }\n  }, []);\n\n  // Login function\n  const login = userData => {\n    setUser(userData);\n    localStorage.setItem(\"user\", JSON.stringify(userData));\n  };\n\n  // Logout function\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem(\"user\");\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n_s2(AuthProvider, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","user","setUser","storedUser","localStorage","getItem","JSON","parse","login","userData","setItem","stringify","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/wwwsu/Desktop/FileSharing/client/src/context/authcontext.js"],"sourcesContent":["// import { createContext, useState, useEffect } from \"react\";\r\n\r\n// export const AuthContext = createContext();\r\n\r\n// export const AuthProvider = ({ children }) => {\r\n//     const [user, setUser] = useState(null);\r\n\r\n//     useEffect(() => {\r\n//         const token = localStorage.getItem(\"token\");\r\n//         if (token) setUser({ token });\r\n//     }, []);\r\n\r\n//     const login = (token) => {\r\n//         localStorage.setItem(\"token\", token);\r\n//         setUser({ token });\r\n//     };\r\n\r\n//     const logout = () => {\r\n//         localStorage.removeItem(\"token\");\r\n//         setUser(null);\r\n//     };\r\n\r\n//     return (\r\n//         <AuthContext.Provider value={{ user, login, logout }}>\r\n//             {children}\r\n//         </AuthContext.Provider>\r\n//     );\r\n// };\r\n\r\n\r\n//------------------------------------\r\n\r\n\r\nimport { createContext, useContext, useState, useEffect } from \"react\";\r\n\r\n// Create AuthContext\r\nconst AuthContext = createContext(null);\r\n\r\n// Custom Hook to use AuthContext\r\nexport const useAuth = () => {\r\n    return useContext(AuthContext);\r\n};\r\n\r\n// AuthProvider Component\r\nexport const AuthProvider = ({ children }) => {\r\n    const [user, setUser] = useState(null);\r\n\r\n    // Load user from localStorage if exists\r\n    useEffect(() => {\r\n        const storedUser = localStorage.getItem(\"user\");\r\n        if (storedUser) {\r\n            setUser(JSON.parse(storedUser));\r\n        }\r\n    }, []);\r\n\r\n    // Login function\r\n    const login = (userData) => {\r\n        setUser(userData);\r\n        localStorage.setItem(\"user\", JSON.stringify(userData));\r\n    };\r\n\r\n    // Logout function\r\n    const logout = () => {\r\n        setUser(null);\r\n        localStorage.removeItem(\"user\");\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ user, login, logout }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport default AuthContext;\r\n"],"mappings":";;;AAAA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAGA,SAASA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAEtE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGN,aAAa,CAAC,IAAI,CAAC;;AAEvC;AACA,OAAO,MAAMO,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,OAAOP,UAAU,CAACK,WAAW,CAAC;AAClC,CAAC;;AAED;AAAAE,EAAA,CAJaD,OAAO;AAKpB,OAAO,MAAME,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC1C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;;EAEtC;EACAC,SAAS,CAAC,MAAM;IACZ,MAAMW,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC/C,IAAIF,UAAU,EAAE;MACZD,OAAO,CAACI,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC,CAAC;IACnC;EACJ,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMK,KAAK,GAAIC,QAAQ,IAAK;IACxBP,OAAO,CAACO,QAAQ,CAAC;IACjBL,YAAY,CAACM,OAAO,CAAC,MAAM,EAAEJ,IAAI,CAACK,SAAS,CAACF,QAAQ,CAAC,CAAC;EAC1D,CAAC;;EAED;EACA,MAAMG,MAAM,GAAGA,CAAA,KAAM;IACjBV,OAAO,CAAC,IAAI,CAAC;IACbE,YAAY,CAACS,UAAU,CAAC,MAAM,CAAC;EACnC,CAAC;EAED,oBACInB,OAAA,CAACC,WAAW,CAACmB,QAAQ;IAACC,KAAK,EAAE;MAAEd,IAAI;MAAEO,KAAK;MAAEI;IAAO,CAAE;IAAAb,QAAA,EAChDA;EAAQ;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAACnB,GAAA,CA5BWF,YAAY;AAAAsB,EAAA,GAAZtB,YAAY;AA8BzB,eAAeH,WAAW;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}