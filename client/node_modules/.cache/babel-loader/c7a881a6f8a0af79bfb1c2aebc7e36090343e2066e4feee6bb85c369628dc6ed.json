{"ast":null,"code":"// import { useRef, useState, useEffect } from \"react\";\n// import { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\n// import \"./App.css\";\n// import { uploadFile } from \"./services/api\";\n// import Login from \"./pages/Login\";\n// import Signup from \"./pages/Signup\";\n// import { AuthProvider, useAuth } from \"./context/authcontext\";  // Import AuthProvider\n// import Dashboard from \"./pages/Dashboard\";\n\n// import PrivateRoutes from \"./routes/PrivateRoutes\";  // Import PrivateRoutes.js\n\n// function FileSharing() {\n//   const [file, setFile] = useState(\"\");\n//   const fileInputRef = useRef();\n//   const [result, setResult] = useState(\"\");\n\n//   const url =\n//     \"https://img.freepik.com/free-vector/video-content-creator-blogger-colorful-cartoon-character-video-editing-uploading-cutting-arrangement-video-shot-manipulation_335657-762.jpg?w=740&t=st=1713546616~exp=1713547216~hmac=c70e785d0f168e52ffc2b6774247f0f66ed18ae9f5cab51dfe5cd198f72d3dda\";\n\n//   useEffect(() => {\n//     const getImage = async () => {\n//       if (file) {\n//         const data = new FormData();\n//         data.append(\"name\", file.name);\n//         data.append(\"file\", file);\n\n//         const response = await uploadFile(data);\n//         setResult(response.path);\n//       }\n//     };\n//     getImage();\n//   }, [file]);\n\n//   const onUploadClick = () => {\n//     fileInputRef.current.click();\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <img src={url} className=\"img\" alt=\"file-sharing\" />\n//       <div className=\"wrapper\">\n//         <h1>Simple File Sharing!</h1>\n//         <p>Upload and share the download link.</p>\n\n//         <button onClick={onUploadClick}>Upload</button>\n//         <input\n//           type=\"file\"\n//           ref={fileInputRef}\n//           style={{ display: \"none\" }}\n//           onChange={(e) => setFile(e.target.files[0])}\n//         />\n\n//         <a href={result} target=\"_blank\" rel=\"noopener noreferrer\">{result}</a>\n//       </div>\n//     </div>\n//   );\n// }\n\n// function App() {\n//   return (\n//     <AuthProvider>\n//       <Router>\n//         <Routes>\n//           {/* Public Routes */}\n//           <Route path=\"/login\" element={<Login />} />\n//           <Route path=\"/signup\" element={<Signup />} />\n\n//           {/* Private Routes */}\n//           <Route element={<PrivateRoutes />}>\n//             <Route path=\"/dashboard\" element={<FileSharing />} />\n//           </Route>\n\n//           {/* Redirect to Dashboard if logged in, otherwise go to login */}\n//           <Route path=\"/\" element={<Navigate to=\"/dashboard\" />} />\n//         </Routes>\n//       </Router>\n//     </AuthProvider>\n//   );\n// }\n\n// export default App;","map":{"version":3,"names":[],"sources":["C:/Users/wwwsu/Desktop/FileSharing/client/src/App.js"],"sourcesContent":["// import { useRef, useState, useEffect } from \"react\";\n// import { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\n// import \"./App.css\";\n// import { uploadFile } from \"./services/api\";\n// import Login from \"./pages/Login\";\n// import Signup from \"./pages/Signup\";\n// import { AuthProvider, useAuth } from \"./context/authcontext\";  // Import AuthProvider\n// import Dashboard from \"./pages/Dashboard\";\n\n// import PrivateRoutes from \"./routes/PrivateRoutes\";  // Import PrivateRoutes.js\n\n// function FileSharing() {\n//   const [file, setFile] = useState(\"\");\n//   const fileInputRef = useRef();\n//   const [result, setResult] = useState(\"\");\n\n//   const url =\n//     \"https://img.freepik.com/free-vector/video-content-creator-blogger-colorful-cartoon-character-video-editing-uploading-cutting-arrangement-video-shot-manipulation_335657-762.jpg?w=740&t=st=1713546616~exp=1713547216~hmac=c70e785d0f168e52ffc2b6774247f0f66ed18ae9f5cab51dfe5cd198f72d3dda\";\n\n//   useEffect(() => {\n//     const getImage = async () => {\n//       if (file) {\n//         const data = new FormData();\n//         data.append(\"name\", file.name);\n//         data.append(\"file\", file);\n\n//         const response = await uploadFile(data);\n//         setResult(response.path);\n//       }\n//     };\n//     getImage();\n//   }, [file]);\n\n//   const onUploadClick = () => {\n//     fileInputRef.current.click();\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <img src={url} className=\"img\" alt=\"file-sharing\" />\n//       <div className=\"wrapper\">\n//         <h1>Simple File Sharing!</h1>\n//         <p>Upload and share the download link.</p>\n\n//         <button onClick={onUploadClick}>Upload</button>\n//         <input\n//           type=\"file\"\n//           ref={fileInputRef}\n//           style={{ display: \"none\" }}\n//           onChange={(e) => setFile(e.target.files[0])}\n//         />\n\n//         <a href={result} target=\"_blank\" rel=\"noopener noreferrer\">{result}</a>\n//       </div>\n//     </div>\n//   );\n// }\n\n// function App() {\n//   return (\n//     <AuthProvider>\n//       <Router>\n//         <Routes>\n//           {/* Public Routes */}\n//           <Route path=\"/login\" element={<Login />} />\n//           <Route path=\"/signup\" element={<Signup />} />\n\n//           {/* Private Routes */}\n//           <Route element={<PrivateRoutes />}>\n//             <Route path=\"/dashboard\" element={<FileSharing />} />\n//           </Route>\n\n//           {/* Redirect to Dashboard if logged in, otherwise go to login */}\n//           <Route path=\"/\" element={<Navigate to=\"/dashboard\" />} />\n//         </Routes>\n//       </Router>\n//     </AuthProvider>\n//   );\n// }\n\n// export default App;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}