{"ast":null,"code":"//\n\n//------------------\n\n// import { useState } from \"react\";\n// import axios from \"axios\";\n// import { useAuth } from \"../context/authcontext\"; // Corrected import\n// import { useNavigate } from \"react-router-dom\";\n\n// const Login = () => {\n//     const [username, setUsername] = useState(\"\");\n//     const [password, setPassword] = useState(\"\");\n//     const { login } = useAuth();  // Use useAuth() instead of useContext(AuthContext)\n//     const navigate = useNavigate();\n\n//     const handleLogin = async (e) => {\n//         e.preventDefault();\n//         try {\n//             const res = await axios.post(\"http://localhost:8000/api/auth/login\", { username, password });\n//             login(res.data.token);  // Store JWT token in context\n//             navigate(\"/dashboard\"); // Redirect to dashboard (or \"upload\" if you prefer)\n//         } catch (error) {\n//             alert(\"Invalid credentials\");\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <h2>Login</h2>\n//             <form onSubmit={handleLogin}>\n//                 <input\n//                     type=\"text\"\n//                     placeholder=\"Username\"\n//                     value={username}\n//                     onChange={(e) => setUsername(e.target.value)}\n//                     required\n//                 />\n//                 <input\n//                     type=\"password\"\n//                     placeholder=\"Password\"\n//                     value={password}\n//                     onChange={(e) => setPassword(e.target.value)}\n//                     required\n//                 />\n//                 <button type=\"submit\">Login</button>\n//             </form>\n//         </div>\n//     );\n// };\n\n// export default Login;\n\n//------------------------","map":{"version":3,"names":[],"sources":["C:/Users/wwwsu/Desktop/FileSharing/client/src/pages/Login.js"],"sourcesContent":["//\r\n\r\n//------------------\r\n\r\n\r\n// import { useState } from \"react\";\r\n// import axios from \"axios\";\r\n// import { useAuth } from \"../context/authcontext\"; // Corrected import\r\n// import { useNavigate } from \"react-router-dom\";\r\n\r\n// const Login = () => {\r\n//     const [username, setUsername] = useState(\"\");\r\n//     const [password, setPassword] = useState(\"\");\r\n//     const { login } = useAuth();  // Use useAuth() instead of useContext(AuthContext)\r\n//     const navigate = useNavigate();\r\n\r\n//     const handleLogin = async (e) => {\r\n//         e.preventDefault();\r\n//         try {\r\n//             const res = await axios.post(\"http://localhost:8000/api/auth/login\", { username, password });\r\n//             login(res.data.token);  // Store JWT token in context\r\n//             navigate(\"/dashboard\"); // Redirect to dashboard (or \"upload\" if you prefer)\r\n//         } catch (error) {\r\n//             alert(\"Invalid credentials\");\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <div>\r\n//             <h2>Login</h2>\r\n//             <form onSubmit={handleLogin}>\r\n//                 <input\r\n//                     type=\"text\"\r\n//                     placeholder=\"Username\"\r\n//                     value={username}\r\n//                     onChange={(e) => setUsername(e.target.value)}\r\n//                     required\r\n//                 />\r\n//                 <input\r\n//                     type=\"password\"\r\n//                     placeholder=\"Password\"\r\n//                     value={password}\r\n//                     onChange={(e) => setPassword(e.target.value)}\r\n//                     required\r\n//                 />\r\n//                 <button type=\"submit\">Login</button>\r\n//             </form>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default Login;\r\n\r\n//------------------------\r\n\r\n\r\n"],"mappings":"AAAA;;AAEA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}